this_path<-file.path(visual_output_path, basename(test_visual_file))
write.csv(newdata, file=(this_path))
}
# Apply function to all auditory files
for (file in visual_files)
{
visual_cleaning(file)
}
# Remove objects in environment
rm(list=ls())
# Prepare file paths
visual_input_path <- "../original_data/visual/"
visual_files <- list.files(path=visual_input_path, pattern="*.csv")
visual_output_path <- "../cleaned_data/visual/"
#to test
test_visual_file <- '/Users/qigroup/Desktop/fmri-pilot-beh-analysis-master/nov_pilot/original_data/visual/m_001_visual_1.csv'
rm(list=ls())
# Clean auditory files ----------------------------------------------------------
# Prepare file paths
visual_input_path <- "../original_data/visual/"
visual_files <- list.files(path=visual_input_path, pattern="*.csv")
visual_output_path <- "../cleaned_data/visual/"
#to test
test_visual_file <- '/Users/qigroup/Desktop/fmri-pilot-beh-analysis-master/nov_pilot/original_data/visual/m_001_visual_1.csv'
# create a new file containing only the relevant columns in the output folder
visual_cleaning <- function(file) {
current_file <- read.csv(file)
value <- c("image","trialnum","condition","l_block_trial_key_resp.keys","l_block_trial_key_resp.rt","v_block_trial_key_resp.keys","v_block_trial_key_resp.rt","vtarget","Run","PartID","ltarget","expName")
newdata <- current_file[value]
this_path<-file.path(visual_output_path, basename(test_visual_file))
write.csv(newdata, file=(this_path))
}
# Apply function to all auditory files
for (file in visual_files)
{
visual_cleaning(file)
}
basename(test_visual_file)
# Remove objects in environment
rm(list=ls())
# Prepare file paths
#visual_input_path <- "../original_data/visual/"
visual_input_path <- '/Users/qigroup/Desktop/fmri-pilot-beh-analysis-master/nov_pilot/original_data/visual/'
visual_files <- list.files(path=visual_input_path, pattern="*.csv")
getfile
read.csv(visual_files[1])
s
s
# Remove objects in environment
rm(list=ls())
# Prepare file paths
#visual_input_path <- "../original_data/visual/"
visual_input_path <- '/Users/qigroup/Desktop/fmri-pilot-beh-analysis-master/nov_pilot/original_data/visual/'
visual_files <- list.files(path=visual_input_path, pattern="*.csv")
# Remove objects in environment
rm(list=ls())
# Prepare file paths
#visual_input_path <- "../original_data/visual/"
visual_input_path <- '/Users/qigroup/Desktop/fmri-pilot-beh-analysis-master/nov_pilot/original_data/visual/'
visual_files <- list.files(path=visual_input_path, pattern="*.csv")
visual_output_path <- "../cleaned_data/visual/"
#to test
test_visual_file <- '/Users/qigroup/Desktop/fmri-pilot-beh-analysis-master/nov_pilot/original_data/visual/m_001_visual_1.csv'
# create a new file containing only the relevant columns in the output folder
visual_cleaning <- function(file) {
current_file <- read.csv(test_visual_file)
value <- c("image","trialnum","condition","l_block_trial_key_resp.keys","l_block_trial_key_resp.rt","v_block_trial_key_resp.keys","v_block_trial_key_resp.rt","vtarget","Run","PartID","ltarget","expName")
newdata <- current_file[value]
this_path<-file.path(visual_output_path, basename(test_visual_file))
write.csv(newdata, file=(this_path))
}
bibble<-0
# Apply function to all auditory files
for (file in visual_files)
{
visual_cleaning(file)
bibble<-bibble+1
}
# Remove objects in environment
rm(list=ls())
# Prepare file paths
#visual_input_path <- "../original_data/visual/"
visual_input_path <- '/Users/qigroup/Desktop/fmri-pilot-beh-analysis-master/nov_pilot/original_data/visual/'
visual_files <- list.files(path=visual_input_path, pattern="*.csv")
visual_output_path <- "../cleaned_data/visual/"
#to test
test_visual_file <- '/Users/qigroup/Desktop/fmri-pilot-beh-analysis-master/nov_pilot/original_data/visual/m_001_visual_1.csv'
# create a new file containing only the relevant columns in the output folder
visual_cleaning <- function(file) {
current_file <- read.csv(file)
value <- c("image","trialnum","condition","l_block_trial_key_resp.keys","l_block_trial_key_resp.rt","v_block_trial_key_resp.keys","v_block_trial_key_resp.rt","vtarget","Run","PartID","ltarget","expName")
newdata <- current_file[value]
this_path<-file.path(visual_output_path, basename(test_visual_file))
write.csv(newdata, file=(this_path))
}
bibble<-0
# Apply function to all auditory files
for (file in visual_files)
{
visual_cleaning(file)
bibble<-bibble+1
}
bibble<-0
# Apply function to all auditory files
for (file in visual_files)
{
visual_cleaning(file)
bibble<-bibble+1
}
# Remove objects in environment
rm(list=ls())
# Clean auditory files ----------------------------------------------------------
# Prepare file paths
#visual_input_path <- "../original_data/visual/"
visual_input_path <- '/Users/qigroup/Desktop/fmri-pilot-beh-analysis-master/nov_pilot/original_data/visual/'
visual_files <- list.files(path=visual_input_path, pattern="*.csv")
visual_output_path <- "../cleaned_data/visual/"
#to test
test_visual_file <- '/Users/qigroup/Desktop/fmri-pilot-beh-analysis-master/nov_pilot/original_data/visual/m_001_visual_1.csv'
# create a new file containing only the relevant columns in the output folder
visual_cleaning <- function(file) {
current_file <- read.csv(test_visual_file)
value <- c("image","trialnum","condition","l_block_trial_key_resp.keys","l_block_trial_key_resp.rt","v_block_trial_key_resp.keys","v_block_trial_key_resp.rt","vtarget","Run","PartID","ltarget","expName")
newdata <- current_file[value]
this_path<-file.path(visual_output_path, basename(test_visual_file))
write.csv(newdata, file=(this_path))
}
bibble<-0
# Apply function to all auditory files
for (file in visual_files)
{
visual_cleaning(file)
bibble<-bibble+1
}
# Remove objects in environment
rm(list=ls())
setwd('/Users/qigroup/Desktop/fmri-pilot-beh-analysis-master/nov_pilot/original_data/visual/')
ldf <- list() # creates a list
listcsv <- dir(pattern = "*.csv") # creates the list of all the csv files in the directory
for (k in 1:length(listcsv)){
ldf[[k]] <- read.csv(listcsv[k])
}
str(ldf[[1]])
#for test purposes only
setwd("/Users/qigroup/Desktop/fmri-pilot-beh-analysis-master/nov_pilot/scripts")
View(ldf)
View(ldf)
getwd()
# Prepare file paths
visual_input_path <- "../original_data/visual/"
visual_files <- list.files(path=visual_input_path, pattern="*.csv")
visual_output_path <- "../cleaned_data/visual/"
#to test
test_visual_file <- '/Users/qigroup/Desktop/fmri-pilot-beh-analysis-master/nov_pilot/original_data/visual/m_001_visual_1.csv'
# create a new file containing only the relevant columns in the output folder
visual_cleaning <- function(file) {
current_file <- read.csv(test_visual_file)
value <- c("image","trialnum","condition","l_block_trial_key_resp.keys","l_block_trial_key_resp.rt","v_block_trial_key_resp.keys","v_block_trial_key_resp.rt","vtarget","Run","PartID","ltarget","expName")
newdata <- current_file[value]
this_path<-file.path(visual_output_path, basename(test_visual_file))
write.csv(newdata, file=(this_path))
}
bibble<-0
# Apply function to all auditory files
for (file in visual_files)
{
visual_cleaning(file)
bibble<-bibble+1
}
# to test
rm(list=ls())
# Prepare file paths
visual_input_path <- "../original_data/visual/"
visual_files <- list.files(path=visual_input_path, pattern="*.csv")
visual_output_path <- "../cleaned_data/visual/"
#to test
test_visual_file <- '/Users/qigroup/Desktop/fmri-pilot-beh-analysis-master/nov_pilot/original_data/visual/m_001_visual_1.csv'
# create a new file containing only the relevant columns in the output folder
visual_cleaning <- function(file) {
current_file <- read.csv(test_visual_file)
value <- c("image","trialnum","condition","l_block_trial_key_resp.keys","l_block_trial_key_resp.rt","v_block_trial_key_resp.keys","v_block_trial_key_resp.rt","vtarget","Run","PartID","ltarget","expName")
newdata <- current_file[value]
this_path<-file.path(visual_output_path, basename(test_visual_file))
write.csv(newdata, file=(this_path))
}
bibble<-0
# Apply function to all auditory files
for (file in visual_files)
{
visual_cleaning(file)
bibble<-bibble+1
}
# to test
rm(list=ls())
# Prepare file paths
visual_input_path <- "../original_data/visual/"
visual_files <- list.files(path=visual_input_path, pattern="*.csv")
visual_output_path <- "../cleaned_data/visual/"
#to test
test_visual_file <- '/Users/qigroup/Desktop/fmri-pilot-beh-analysis-master/nov_pilot/original_data/visual/m_001_visual_1.csv'
# create a new file containing only the relevant columns in the output folder
visual_cleaning <- function(file) {
current_file <- read.csv(file)
value <- c("image","trialnum","condition","l_block_trial_key_resp.keys","l_block_trial_key_resp.rt","v_block_trial_key_resp.keys","v_block_trial_key_resp.rt","vtarget","Run","PartID","ltarget","expName")
newdata <- current_file[value]
this_path<-file.path(visual_output_path, basename(test_visual_file))
write.csv(newdata, file=(this_path))
}
bibble<-0
# Apply function to all auditory files
for (file in visual_files)
{
visual_cleaning(file)
bibble<-bibble+1
}
# to test
rm(list=ls())
# Prepare file paths
visual_input_path <- "../original_data/visual/"
visual_files <- list.files(path=visual_input_path, pattern="*.csv")
visual_output_path <- "../cleaned_data/visual/"
#to test
test_visual_file <- '/Users/qigroup/Desktop/fmri-pilot-beh-analysis-master/nov_pilot/original_data/visual/m_001_visual_1.csv'
# create a new file containing only the relevant columns in the output folder
visual_cleaning <- function(file) {
current_file <- read.csv(test_visual_file)
value <- c("image","trialnum","condition","l_block_trial_key_resp.keys","l_block_trial_key_resp.rt","v_block_trial_key_resp.keys","v_block_trial_key_resp.rt","vtarget","Run","PartID","ltarget","expName")
newdata <- current_file[value]
this_path<-file.path(visual_output_path, basename(test_visual_file))
write.csv(newdata, file=(this_path))
}
bibble<-0
# Apply function to all auditory files
for (file in visual_files)
{
visual_cleaning(file)
bibble<-bibble+1
}
visual_input_path[1]
setwd("/Users/qigroup/Desktop/fmri-pilot-beh-analysis-master/nov_pilot/scripts")
# Remove objects in environment
rm(list=ls())
# Clean auditory files ----------------------------------------------------------
# Prepare file paths
auditory_input_path <- "../original_data/auditory/"
auditory_files <- list.files(path=auditory_input_path, pattern="*.csv")
auditory_output_path <- "../cleaned_data/auditory/"
# create a new file containing only the relevant columns in the output folder
auditory_cleaning <- function(file) {
current_file <- read.csv(file)
value <- c("soundFile","trialnum","condition","random_block_key_resp.rt","random_block_key_resp.keys","structured_block_key_resp.rt","structured_block_key_resp.keys","starget","Run","PartID","ttarget","expName")
newdata <- current_file[value]
this_path<-file.path(auditory_output_path, basename(file))
write.csv(newdata, file=(this_path))
}
# Apply function to all auditory files
for (file in auditory_files)
{
auditory_cleaning(file)
}
setwd("/Users/qigroup/Desktop/fmri-pilot-beh-analysis-master/nov_pilot/scripts")
# Remove objects in environment
rm(list=ls())
# Clean auditory files ----------------------------------------------------------
# Prepare file paths
auditory_input_path <- "../original_data/auditory/"
auditory_files <- list.files(path=auditory_input_path, pattern="*.csv")
auditory_output_path <- "../cleaned_data/auditory/"
# create a new file containing only the relevant columns in the output folder
auditory_cleaning <- function(file) {
current_file <- read.csv(file)
value <- c("soundFile","trialnum","condition","random_block_key_resp.rt","random_block_key_resp.keys","structured_block_key_resp.rt","structured_block_key_resp.keys","starget","Run","PartID","ttarget","expName")
newdata <- current_file[value]
this_path<-file.path(auditory_output_path, basename(file))
write.csv(newdata, file=(this_path))
}
# Apply function to all auditory files
for (file in auditory_files)
{
auditory_cleaning(file)
}
# Remove objects in environment
rm(list=ls())
# Prepare file paths
visual_input_path <- "../original_data/visual/"
# Remove objects in environment
rm(list=ls())
# Prepare file paths
visual_input_path <- "../original_data/visual/"
visual_files <- list.files(path=visual_input_path, pattern="*.csv")
visual_output_path <- "../cleaned_data/visual/"
# create a new file containing only the relevant columns in the output folder
visual_cleaning <- function(file) {
current_file <- read.csv(file)
value <- c("soundFile","trialnum","condition","random_block_key_resp.rt","random_block_key_resp.keys","structured_block_key_resp.rt","structured_block_key_resp.keys","starget","Run","PartID","ttarget","expName")
newdata <- current_file[value]
this_path<-file.path(visual_output_path, basename(file))
write.csv(newdata, file=(this_path))
}
# Apply function to all visual files
for (file in visual_files)
{
visual_cleaning(file)
}
# to test
rm(list=ls())
# Prepare file paths
visual_input_path <- "../original_data/visual/"
visual_files <- list.files(path=visual_input_path, pattern="*.csv")
visual_output_path <- "../cleaned_data/visual/"
#to test
test_visual_file <- '/Users/qigroup/Desktop/fmri-pilot-beh-analysis-master/nov_pilot/original_data/visual/m_001_visual_1.csv'
# create a new file containing only the relevant columns in the output folder
visual_cleaning <- function(file) {
current_file <- read.csv(test_visual_file)
value <- c("image","trialnum","condition","l_block_trial_key_resp.keys","l_block_trial_key_resp.rt","v_block_trial_key_resp.keys","v_block_trial_key_resp.rt","vtarget","Run","PartID","ltarget","expName")
newdata <- current_file[value]
this_path<-file.path(visual_output_path, basename(test_visual_file))
write.csv(newdata, file=(this_path))
}
# Apply function to all auditory files
for (file in visual_files)
{
visual_cleaning(file)
}
# to test
rm(list=ls())
# Prepare file paths
visual_input_path <- "../original_data/visual/"
visual_files <- list.files(path=visual_input_path, pattern="*.csv")
visual_output_path <- "../cleaned_data/visual/"
#to test
test_visual_file <- '/Users/qigroup/Desktop/fmri-pilot-beh-analysis-master/nov_pilot/original_data/visual/m_001_visual_1.csv'
# create a new file containing only the relevant columns in the output folder
visual_cleaning <- function(file) {
current_file <- read.csv(test_visual_file)
value <- c("image","trialnum","condition","l_block_trial_key_resp.keys","l_block_trial_key_resp.rt","v_block_trial_key_resp.keys","v_block_trial_key_resp.rt","vtarget","Run","PartID","ltarget","expName")
newdata <- current_file[value]
this_path<-file.path(visual_output_path, basename(test_visual_file))
write.csv(newdata, file=(this_path))
}
# Apply function to all auditory files
for (file in visual_files)
{
visual_cleaning(file)
}
#  FMRI Pilot Analysis
#  Violet Kozloff
#  March 11, 2018
#  This script cleans the auditory and visual files from the November pilot for accuracy analysis
#  NOTE: Does not include participant 9, who did not respond in several conditions
#  NOTE: Original psychopy files have been renamed to have a letter as a leading character
#  ****************************************************************************
# Note: to change names of files in terminal:
# for file in *.csv; do mv "$file" "m_$file"; done;
#for test purposes only
setwd("/Users/qigroup/Desktop/fmri-pilot-beh-analysis-master/accuracy/nov_pilot/scripts")
# Remove objects in environment
rm(list=ls())
# Set up auditory file paths
auditory_path <- ("../original_data/auditory")
auditory_files<- list.files(path=auditory_path, pattern="*.csv")
tsl_files <- list.files(path=auditory_path, pattern="*6.csv")
ssl_files <- list.files(path=auditory_path, pattern="*3.csv")
# Set up visual file paths
visual_path <- ("../original_data/visual")
visual_files<- list.files(path=visual_path, pattern="*.csv")
vsl_files <- list.files(path=auditory_path, pattern="*6.csv")
lsl_files <- list.files(path=auditory_path, pattern="*3.csv")
# Clean auditory data----------------------------------------------
# tsl: create a new file containing only the relevant columns in the output folder
tsl_cleaning <- function(file) {
current_file <- read.csv(file)
value <- c("key_resp_6.corr", "soundFile3","Run","PartID","ttarget","expName")
newdata <- current_file[value]
this_path<-file.path(auditory_output_path, basename(file))
write.csv(newdata, file=(this_path))
}
# Apply function to all tsl files
for (file in tsl_files)
{
tsl_cleaning(file)
}
# tsl: create a new file containing only the relevant columns in the output folder
ssl_cleaning <- function(file) {
current_file <- read.csv(file)
value <- c("question_key_resp.corr", "soundFile3","Run","PartID","ttarget","expName")
newdata <- current_file[value]
this_path<-file.path(auditory_output_path, basename(file))
write.csv(newdata, file=(this_path))
}
# Apply function to all ssl files
for (file in ssl_files)
{
ssl_cleaning(file)
}
# Clean visual files ----------------------------------------------------------
# Prepare file paths
# create a new file containing only the relevant columns in the output folder
auditory_cleaning <- function(file) {
current_file <- read.csv(file)
value <- c("key_resp_6.corr", "question_key_resp.corr", "soundFile3","Run","PartID","ttarget","expName")
newdata <- current_file[value]
this_path<-file.path(auditory_output_path, basename(file))
write.csv(newdata, file=(this_path))
}
# Apply function to all auditory files
for (file in auditory_files)
{
auditory_cleaning(file)
}
# Clean visual files ----------------------------------------------------------
# lsl: create a new file containing only the relevant columns in the output folder
lsl_cleaning <- function(file) {
current_file <- read.csv(file)
value <- c("key_resp_6.corr", "letter6","Run","PartID","ltarget","expName")
newdata <- current_file[value]
this_path<-file.path(auditory_output_path, basename(file))
write.csv(newdata, file=(this_path))
}
# Apply function to all lsl files
for (file in lsl_files)
{
lsl_cleaning(file)
}
# vsl: create a new file containing only the relevant columns in the output folder
vsl_cleaning <- function(file) {
current_file <- read.csv(file)
value <- c("question_key_resp.corr", "soundFile3","Run","PartID","vtarget","expName")
newdata <- current_file[value]
this_path<-file.path(auditory_output_path, basename(file))
write.csv(newdata, file=(this_path))
}
# Apply function to all vsl files
for (file in vsl_files)
{
vsl_cleaning(file)
}
#for test purposes only
setwd("/Users/qigroup/Desktop/fmri-pilot-beh-analysis-master/accuracy/nov_pilot/scripts")
getwd
getwd()
# Remove objects in environment
rm(list=ls())
# Set up auditory file paths
auditory_path <- ("../original_data/auditory")
auditory_files<- list.files(path=auditory_path, pattern="*.csv")
tsl_files <- list.files(path=auditory_path, pattern="*6.csv")
ssl_files <- list.files(path=auditory_path, pattern="*3.csv")
# Set up visual file paths
visual_path <- ("../original_data/visual")
visual_files<- list.files(path=visual_path, pattern="*.csv")
vsl_files <- list.files(path=auditory_path, pattern="*6.csv")
lsl_files <- list.files(path=auditory_path, pattern="*3.csv")
# tsl: create a new file containing only the relevant columns in the output folder
tsl_cleaning <- function(file) {
current_file <- read.csv(file)
value <- c("key_resp_6.corr", "soundFile3","Run","PartID","ttarget","expName")
newdata <- current_file[value]
this_path<-file.path(auditory_output_path, basename(file))
write.csv(newdata, file=(this_path))
}
# Apply function to all tsl files
for (file in tsl_files)
{
tsl_cleaning(file)
}
#for test purposes only
setwd("/Users/qigroup/Desktop/fmri-pilot-beh-analysis-master/accuracy/nov_pilot/scripts")
# Remove objects in environment
rm(list=ls())
# Set up auditory file paths
auditory_input_path <- ("../original_data/auditory")
auditory_files<- list.files(path=auditory_path, pattern="*.csv")
tsl_files <- list.files(path=auditory_path, pattern="*6.csv")
ssl_files <- list.files(path=auditory_path, pattern="*3.csv")
auditory_output_path <- "../cleaned_data/auditory/"
# Remove objects in environment
rm(list=ls())
# Set up auditory file paths
auditory_input_path <- ("../original_data/auditory")
auditory_files<- list.files(path=auditory_input_path, pattern="*.csv")
tsl_files <- list.files(path=auditory_input_path, pattern="*6.csv")
ssl_files <- list.files(path=auditory_input_path, pattern="*3.csv")
auditory_output_path <- "../cleaned_data/auditory/"
# Set up visual file paths
visual_input_path <- ("../original_data/visual")
visual_files<- list.files(path=visual_input_path, pattern="*.csv")
vsl_files <- list.files(path=auditory_input_path, pattern="*6.csv")
lsl_files <- list.files(path=auditory_input_path, pattern="*3.csv")
auditory_output_path <- "../cleaned_data/auditory/"
# tsl: create a new file containing only the relevant columns in the output folder
tsl_cleaning <- function(file) {
current_file <- read.csv(file)
value <- c("key_resp_6.corr", "soundFile3","Run","PartID","ttarget","expName")
newdata <- current_file[value]
this_path<-file.path(auditory_output_path, basename(file))
write.csv(newdata, file=(this_path))
}
# Apply function to all tsl files
for (file in tsl_files)
{
tsl_cleaning(paste0(auditory_input_path,file))
}
for (file in tsl_files)
sfprint(basename(file))
for (file in tsl_files)
sprint(basename(file))
for (file in tsl_files)
basename(file)
for (file in tsl_files)
View(file)
